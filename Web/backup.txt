      > html
            <div class="scoreboard">
                <p class="score">점수: <span id="score">0</span></p>
                <p>레벨: <span id="level">1</span></p>
            </div>
            <div id="rankingBoard" class="ranking-board">
                <h3>실시간 랭킹</h3>
                <ul id="rankingList"></ul>
            </div>


json 파일 형식

            // 점수 및 레벨 업데이트 함수
function updateScore() {
    fetch("Scoreboard2.php")
        .then(response => response.json())
        .then(data => {
            document.getElementById("score").textContent = data.score;
            document.getElementById("level").textContent = data.stage;
        })
        .catch(error => console.error("Error updating score:", error));
}

// 페이지 로드 시 점수 불러오기
document.addEventListener("DOMContentLoaded", () => {
    updateScore();
});

// 스테이지 완료 시 호출하는 함수 예시
function completeStage() {
    updateScore(10);  // 스테이지 완료 시 점수 10점 추가
    alert("스테이지 완료! 점수가 갱신되었습니다.");
}

// 팝업 닫기 함수
function closePopup() {
    document.getElementById("gamePopup").style.display = "none";
}

// 게임 해결 함수 예시
function solveGame() {
    completeStage();  // 스테이지 완료 처리
    closePopup();
}
// 랭킹 정보를 업데이트하는 함수
function updateRanking() {
    fetch("ranking.php")
        .then(response => response.json())
        .then(data => {
            const rankingList = document.getElementById("rankingList");
            rankingList.innerHTML = ""; // 기존 랭킹 초기화

            // 랭킹 데이터를 순회하며 리스트 생성
            data.forEach((player, index) => {
                const listItem = document.createElement("li");
                listItem.innerHTML = `                    
                    <strong>${index + 1}위</strong>
                    <span>${player.username}</span>
                    <span>점수: ${player.score}</span>
                    <span>레벨: ${player.stage}</span>`;
                rankingList.appendChild(listItem);
            });
        })
        .catch(error => console.error("Error fetching ranking data:", error));
}

// 5초마다 랭킹 갱신
document.addEventListener("DOMContentLoaded", () => {
    updateRanking(); // 첫 로드 시 랭킹 표시
    setInterval(updateRanking, 5000); // 5초마다 업데이트
});



css 
.ranking-board {
    width: 80%;
    background-color: #444;
    padding: 15px;
    margin-top: 20px;
    border-radius: 8px;
    color: #fff;
    text-align: center;
}

.ranking-board h3 {
    margin: 0 0 10px;
    font-size: 1.2em;
    color: #ffd700; /* 타이틀 색상 */
}

.ranking-board ul {
    list-style: none;
    padding: 0;
    margin: 0;
}

.ranking-board li {
    padding: 8px 0;
    border-bottom: 1px solid #555;
    color: #ccc;
    font-size: 0.9em;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.ranking-board li:last-child {
    border-bottom: none;
}

.ranking-board li strong {
    color: #ffd700; /* 순위 색상 */
    margin-right: 8px;
}

.ranking-board li span {
    color: #fff;
    font-weight: bold;
}    